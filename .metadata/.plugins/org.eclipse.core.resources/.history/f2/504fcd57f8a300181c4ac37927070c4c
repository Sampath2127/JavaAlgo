package com.lovecoding.quicksort;

import java.util.concurrent.ArrayBlockingQueue;

public class QuickSort {

	
	public static void main(String[] args) {
		QuickSort sort=new QuickSort();
		int[] arr=new int[]{5,12,9,7,8,6};
		int start=0;
		int end=arr.length-1;
		sort.sortArray(arr, start, end);
	}

	private void sortArray(int[] arr, int start, int end) {
		if(start<=end){
			int pivot=partition(arr, start, end);
			sortArray(arr, start, pivot-1);
			sortArray(arr, pivot, end);
		}
	}

	private int partition(int[] arr, int start, int end) {
		int pivot=arr[end];
		int i=start;
		for(int j=0; j<end-1; j++){
			if(arr[j]<=pivot){
				exchange(arr, i, j);
				i++;
			}
		}
		exchange(i, end);
		return i;
	}

	private void exchange(int[] arr, int i, int j) {
		int temp=arr[i];
		arr[i]=arr[j];
		arr[j]=temp;
	}
}
