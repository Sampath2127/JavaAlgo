package com.lovecoding.stackArrays;

public class Stack<T> {

	private T[] stack;
	private int numOfItems;
	
	public Stack(){
		//this.stack=(T[])new T[1];*****Not Allowed Generic Types for Arrays**** 
		this.stack=(T[])new Object[1];
	}
	
	public void push(T newData){
		
		if(numOfItems==stack.length){
			resizeArray(2*stack.length);
		}
		stack[numOfItems++]=newData;
	}
	
	public T pop(){
		
		T itemToPop=this.stack[--numOfItems];
		if(numOfItems>0 && numOfItems == this.stack.length/4){
			resizeArray(this.stack.length/2);
		}
		this.stack[numOfItems]=null;
		return itemToPop;
	}
	
	private void resizeArray(int capacity) {
		@SuppressWarnings("unchecked")
		T[] copyArray=(T[]) new Object[capacity];
		
		for(int i=0; i<stack.length; i++){
			copyArray[i]=stack[i];
		}
		stack=copyArray; 
	}
	
	public boolean isEmpty(){
		return this.numOfItems==0;
	}
	
	public int size(){
		return this.numOfItems;
	}
	
}
