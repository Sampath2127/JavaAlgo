package com.lovecoding.SinglyLinkedList;

public class LinkedList<T extends Comparable<T>> implements List<T> {
	
	private Node<T> root;
	private int sizeOfList;

	@Override
	public void insert(T data) {
		++this.sizeOfList;
		
		if(root==null){
			this.root=new Node<>(data);
		}else{
			insertDataAtBeginning(data);
		}
		
	}

	//O(1)
	private void insertDataAtBeginning(T data) {
		Node<T> newNode=new Node<>(data);
		newNode.setNextNode(root);
		this.root=newNode;
	}

	//O(N)
	private void insertDataAtEnd(T data, Node<T> node){
		 
		if(node.getNextNode() !=null){
			insertDataAtEnd(data, node.getNextNode());
		}else{
			Node<T> newNode=new Node<>(data);
			node.setNextNode(newNode);
		}
	}
	@Override
	public void remove(T data) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void traverseList() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}
	
	

}
